//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: System.Data.Mapping.EntityViewGenerationAttribute(typeof(Edm_EntityMappingGeneratedViews.ViewsForBaseEntitySets6E5E407434DEA26F05D6EACFBC07CC941A16C7A34D52C23C4E30262B0CA7B0A7))]

namespace Edm_EntityMappingGeneratedViews
{
    
    
    /// <Summary>
    /// The type contains views for EntitySets and AssociationSets that were generated at design time.
    /// </Summary>
    public sealed class ViewsForBaseEntitySets6E5E407434DEA26F05D6EACFBC07CC941A16C7A34D52C23C4E30262B0CA7B0A7 : System.Data.Mapping.EntityViewContainer
    {
        
        /// <Summary>
        /// The constructor stores the views for the extents and also the hash values generated based on the metadata and mapping closure and views.
        /// </Summary>
        public ViewsForBaseEntitySets6E5E407434DEA26F05D6EACFBC07CC941A16C7A34D52C23C4E30262B0CA7B0A7()
        {
            this.EdmEntityContainerName = "MiniBookStoreEntities";
            this.StoreEntityContainerName = "crud_genaratemodelStoreContainer";
            this.HashOverMappingClosure = "7cd08aeb83dc64cb123ed30d75a92a9e65aa4a996fddb535823adf32bb6d1523";
            this.HashOverAllExtentViews = "f4f3d41e72d0dc1b6ca8c85f5d8e0425635ea7e6f4cd1201bfb82e67d689b0b1";
            this.ViewCount = 38;
        }
        
        /// <Summary>
        /// The method returns the view for the index given.
        /// </Summary>
        protected override System.Collections.Generic.KeyValuePair<string, string> GetViewAt(int index)
        {
            if ((index == 0))
            {
                return GetView0();
            }
            if ((index == 1))
            {
                return GetView1();
            }
            if ((index == 2))
            {
                return GetView2();
            }
            if ((index == 3))
            {
                return GetView3();
            }
            if ((index == 4))
            {
                return GetView4();
            }
            if ((index == 5))
            {
                return GetView5();
            }
            if ((index == 6))
            {
                return GetView6();
            }
            if ((index == 7))
            {
                return GetView7();
            }
            if ((index == 8))
            {
                return GetView8();
            }
            if ((index == 9))
            {
                return GetView9();
            }
            if ((index == 10))
            {
                return GetView10();
            }
            if ((index == 11))
            {
                return GetView11();
            }
            if ((index == 12))
            {
                return GetView12();
            }
            if ((index == 13))
            {
                return GetView13();
            }
            if ((index == 14))
            {
                return GetView14();
            }
            if ((index == 15))
            {
                return GetView15();
            }
            if ((index == 16))
            {
                return GetView16();
            }
            if ((index == 17))
            {
                return GetView17();
            }
            if ((index == 18))
            {
                return GetView18();
            }
            if ((index == 19))
            {
                return GetView19();
            }
            if ((index == 20))
            {
                return GetView20();
            }
            if ((index == 21))
            {
                return GetView21();
            }
            if ((index == 22))
            {
                return GetView22();
            }
            if ((index == 23))
            {
                return GetView23();
            }
            if ((index == 24))
            {
                return GetView24();
            }
            if ((index == 25))
            {
                return GetView25();
            }
            if ((index == 26))
            {
                return GetView26();
            }
            if ((index == 27))
            {
                return GetView27();
            }
            if ((index == 28))
            {
                return GetView28();
            }
            if ((index == 29))
            {
                return GetView29();
            }
            if ((index == 30))
            {
                return GetView30();
            }
            if ((index == 31))
            {
                return GetView31();
            }
            if ((index == 32))
            {
                return GetView32();
            }
            if ((index == 33))
            {
                return GetView33();
            }
            if ((index == 34))
            {
                return GetView34();
            }
            if ((index == 35))
            {
                return GetView35();
            }
            if ((index == 36))
            {
                return GetView36();
            }
            if ((index == 37))
            {
                return GetView37();
            }
            throw new System.IndexOutOfRangeException();
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Bill
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView0()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Bill", @"
    SELECT VALUE -- Constructing Bill
        [crud_genarate.model.Store.Bill](T1.[Bill.Bill_ID], T1.[Bill.Bill_Date], T1.[Bill.Customer_ID], T1.[Bill.Employee_ID], T1.[Bill.Total_Money], T1.[Bill.Excess_Cash], T1.[Bill.Sum_Money], T1.[Bill.Bill_Type], T1.Bill_DiscountCode, T1.[Bill.Bill_Status], T1.[Bill.Customer_Cash])
    FROM (
        SELECT 
            T.Bill_ID AS [Bill.Bill_ID], 
            T.Bill_Date AS [Bill.Bill_Date], 
            T.Customer_ID AS [Bill.Customer_ID], 
            T.Employee_ID AS [Bill.Employee_ID], 
            T.Total_Money AS [Bill.Total_Money], 
            T.Excess_Cash AS [Bill.Excess_Cash], 
            T.Sum_Money AS [Bill.Sum_Money], 
            T.Bill_Type AS [Bill.Bill_Type], 
            T.DiscountCode AS Bill_DiscountCode, 
            T.Bill_Status AS [Bill.Bill_Status], 
            T.Customer_Cash AS [Bill.Customer_Cash], 
            True AS _from0
        FROM MiniBookStoreEntities.Bill AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Bill_Detail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView1()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Bill_Detail", @"
    SELECT VALUE -- Constructing Bill_Detail
        [crud_genarate.model.Store.Bill_Detail](T1.[Bill_Detail.Detail_ID], T1.[Bill_Detail.Bill_ID], T1.[Bill_Detail.Book_ID], T1.[Bill_Detail.Book_Count], T1.[Bill_Detail.Book_Price], T1.[Bill_Detail.Book_Promotion], T1.[Bill_Detail.Book_InPrice])
    FROM (
        SELECT 
            T.Detail_ID AS [Bill_Detail.Detail_ID], 
            T.Bill_ID AS [Bill_Detail.Bill_ID], 
            T.Book_ID AS [Bill_Detail.Book_ID], 
            T.Book_Count AS [Bill_Detail.Book_Count], 
            T.Book_Price AS [Bill_Detail.Book_Price], 
            T.Book_Promotion AS [Bill_Detail.Book_Promotion], 
            T.Book_InPrice AS [Bill_Detail.Book_InPrice], 
            True AS _from0
        FROM MiniBookStoreEntities.Bill_Detail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Bill_Type
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView2()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Bill_Type", @"
    SELECT VALUE -- Constructing Bill_Type
        [crud_genarate.model.Store.Bill_Type](T1.[Bill_Type.BillType_ID], T1.[Bill_Type.BillType_Name])
    FROM (
        SELECT 
            T.BillType_ID AS [Bill_Type.BillType_ID], 
            T.BillType_Name AS [Bill_Type.BillType_Name], 
            True AS _from0
        FROM MiniBookStoreEntities.Bill_Type AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Book
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView3()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Book", @"
    SELECT VALUE -- Constructing Book
        [crud_genarate.model.Store.Book](T1.[Book.Book_ID], T1.[Book.Book_Name], T1.[Book.Book_Author], T1.[Book.Book_SubCategory], T1.[Book.Book_Category], T1.[Book.Book_Company], T1.[Book.Book_Price], T1.[Book.Book_Promotion], T1.[Book.Book_Image], T1.[Book.Book_Inventory], T1.[Book.Book_Status])
    FROM (
        SELECT 
            T.Book_ID AS [Book.Book_ID], 
            T.Book_Name AS [Book.Book_Name], 
            T.Book_Author AS [Book.Book_Author], 
            T.Book_SubCategory AS [Book.Book_SubCategory], 
            T.Book_Category AS [Book.Book_Category], 
            T.Book_Company AS [Book.Book_Company], 
            T.Book_Price AS [Book.Book_Price], 
            T.Book_Promotion AS [Book.Book_Promotion], 
            T.Book_Image AS [Book.Book_Image], 
            T.Book_Inventory AS [Book.Book_Inventory], 
            T.Book_Status AS [Book.Book_Status], 
            True AS _from0
        FROM MiniBookStoreEntities.Book AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Book_Inventory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView4()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Book_Inventory", @"
    SELECT VALUE -- Constructing Book_Inventory
        [crud_genarate.model.Store.Book_Inventory](T1.[Book_Inventory.WareHouse_ID], T1.[Book_Inventory.Book_ID], T1.[Book_Inventory.Book_Count])
    FROM (
        SELECT 
            T.WareHouse_ID AS [Book_Inventory.WareHouse_ID], 
            T.Book_ID AS [Book_Inventory.Book_ID], 
            T.Book_Count AS [Book_Inventory.Book_Count], 
            True AS _from0
        FROM MiniBookStoreEntities.Book_Inventory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Category
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView5()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Category", @"
    SELECT VALUE -- Constructing Category
        [crud_genarate.model.Store.Category](T1.[Category.Category_ID], T1.[Category.Category_Name])
    FROM (
        SELECT 
            T.Category_ID AS [Category.Category_ID], 
            T.Category_Name AS [Category.Category_Name], 
            True AS _from0
        FROM MiniBookStoreEntities.Category AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView6()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Company", @"
    SELECT VALUE -- Constructing Company
        [crud_genarate.model.Store.Company](T1.[Company.Company_ID], T1.[Company.Company_Name])
    FROM (
        SELECT 
            T.Company_ID AS [Company.Company_ID], 
            T.Company_Name AS [Company.Company_Name], 
            True AS _from0
        FROM MiniBookStoreEntities.Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Customer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView7()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Customer", @"
    SELECT VALUE -- Constructing Customer
        [crud_genarate.model.Store.Customer](T1.[Customer.Customer_ID], T1.[Customer.Customer_Name], T1.[Customer.Customer_Phone], T1.[Customer.Customer_Email], T1.[Customer.Customer_Address])
    FROM (
        SELECT 
            T.Customer_ID AS [Customer.Customer_ID], 
            T.Customer_Name AS [Customer.Customer_Name], 
            T.Customer_Phone AS [Customer.Customer_Phone], 
            T.Customer_Email AS [Customer.Customer_Email], 
            T.Customer_Address AS [Customer.Customer_Address], 
            True AS _from0
        FROM MiniBookStoreEntities.Customer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Discount_Code
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView8()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Discount_Code", @"
    SELECT VALUE -- Constructing Discount_Code
        [crud_genarate.model.Store.Discount_Code](T1.[Discount_Code.Code_ID], T1.[Discount_Code.Code_Name], T1.[Discount_Code.Code_Type], T1.[Discount_Code.Date_Start], T1.[Discount_Code.Date_End], T1.[Discount_Code.Code_Status])
    FROM (
        SELECT 
            T.Code_ID AS [Discount_Code.Code_ID], 
            T.Code_Name AS [Discount_Code.Code_Name], 
            T.Code_Type AS [Discount_Code.Code_Type], 
            T.Date_Start AS [Discount_Code.Date_Start], 
            T.Date_End AS [Discount_Code.Date_End], 
            T.Code_Status AS [Discount_Code.Code_Status], 
            True AS _from0
        FROM MiniBookStoreEntities.Discount_Code AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Discount_Type
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView9()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Discount_Type", @"
    SELECT VALUE -- Constructing Discount_Type
        [crud_genarate.model.Store.Discount_Type](T1.[Discount_Type.DiscountType_ID], T1.[Discount_Type.DiscountType_Name], T1.[Discount_Type.Book_Count], T1.[Discount_Type.DiscountType_Promotion])
    FROM (
        SELECT 
            T.DiscountType_ID AS [Discount_Type.DiscountType_ID], 
            T.DiscountType_Name AS [Discount_Type.DiscountType_Name], 
            T.Book_Count AS [Discount_Type.Book_Count], 
            T.DiscountType_Promotion AS [Discount_Type.DiscountType_Promotion], 
            True AS _from0
        FROM MiniBookStoreEntities.Discount_Type AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Employee
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView10()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Employee", @"
    SELECT VALUE -- Constructing Employee
        [crud_genarate.model.Store.Employee](T1.[Employee.Employee_ID], T1.[Employee.Employee_Name], T1.[Employee.Employee_Address], T1.[Employee.Employee_Gender], T1.[Employee.Employee_DOB], T1.[Employee.Employee_CreatedDate], T1.[Employee.Employee_Avatar], T1.[Employee.Employee_Phone], T1.[Employee.Employee_Status], T1.[Employee.Employee_Role], T1.[Employee.Sum_Date])
    FROM (
        SELECT 
            T.Employee_ID AS [Employee.Employee_ID], 
            T.Employee_Name AS [Employee.Employee_Name], 
            T.Employee_Address AS [Employee.Employee_Address], 
            T.Employee_Gender AS [Employee.Employee_Gender], 
            T.Employee_DOB AS [Employee.Employee_DOB], 
            T.Employee_CreatedDate AS [Employee.Employee_CreatedDate], 
            T.Employee_Avatar AS [Employee.Employee_Avatar], 
            T.Employee_Phone AS [Employee.Employee_Phone], 
            T.Employee_Status AS [Employee.Employee_Status], 
            T.Employee_Role AS [Employee.Employee_Role], 
            T.Sum_Date AS [Employee.Sum_Date], 
            True AS _from0
        FROM MiniBookStoreEntities.Employee AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Employee_Account
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView11()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Employee_Account", @"
    SELECT VALUE -- Constructing Employee_Account
        [crud_genarate.model.Store.Employee_Account](T1.[Employee_Account.Employee_ID], T1.[Employee_Account.Account_UserName], T1.[Employee_Account.Account_Passwork], T1.[Employee_Account.Account_LastLogin])
    FROM (
        SELECT 
            T.Employee_ID AS [Employee_Account.Employee_ID], 
            T.Account_UserName AS [Employee_Account.Account_UserName], 
            T.Account_Passwork AS [Employee_Account.Account_Passwork], 
            T.Account_LastLogin AS [Employee_Account.Account_LastLogin], 
            True AS _from0
        FROM MiniBookStoreEntities.Employee_Account AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Page_Wage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView12()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Page_Wage", @"
    SELECT VALUE -- Constructing Page_Wage
        [crud_genarate.model.Store.Page_Wage](T1.[Page_Wage.ID], T1.[Page_Wage.Employee_ID], T1.[Page_Wage.Salary], T1.[Page_Wage.Date], T1.[Page_Wage.SumDate])
    FROM (
        SELECT 
            T.ID AS [Page_Wage.ID], 
            T.Employee_ID AS [Page_Wage.Employee_ID], 
            T.Salary AS [Page_Wage.Salary], 
            T.Date AS [Page_Wage.Date], 
            T.SumDate AS [Page_Wage.SumDate], 
            True AS _from0
        FROM MiniBookStoreEntities.Page_Wage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Role
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView13()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Role", @"
    SELECT VALUE -- Constructing Role
        [crud_genarate.model.Store.Role](T1.[Role.Role_Name], T1.[Role.Role_Salary], T1.[Role.Role_ID])
    FROM (
        SELECT 
            T.Role_Name AS [Role.Role_Name], 
            T.Role_Salary AS [Role.Role_Salary], 
            T.Role_ID AS [Role.Role_ID], 
            True AS _from0
        FROM MiniBookStoreEntities.Role AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.SubCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView14()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.SubCategory", @"
    SELECT VALUE -- Constructing SubCategory
        [crud_genarate.model.Store.SubCategory](T1.[SubCategory.SubCategory_ID], T1.[SubCategory.SubCategory_Name], T1.[SubCategory.Category_ID])
    FROM (
        SELECT 
            T.SubCategory_ID AS [SubCategory.SubCategory_ID], 
            T.SubCategory_Name AS [SubCategory.SubCategory_Name], 
            T.Category_ID AS [SubCategory.Category_ID], 
            True AS _from0
        FROM MiniBookStoreEntities.SubCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.WareHouse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView15()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.WareHouse", @"
    SELECT VALUE -- Constructing WareHouse
        [crud_genarate.model.Store.WareHouse](T1.[WareHouse.WareHouse_ID], T1.[WareHouse.WareHouse_Type], T1.[WareHouse.WareHouse_Total_Money], T1.[WareHouse.WareHouse_Date], T1.[WareHouse.Employee_ID])
    FROM (
        SELECT 
            T.WareHouse_ID AS [WareHouse.WareHouse_ID], 
            T.WareHouse_Type AS [WareHouse.WareHouse_Type], 
            T.WareHouse_Total_Money AS [WareHouse.WareHouse_Total_Money], 
            T.WareHouse_Date AS [WareHouse.WareHouse_Date], 
            T.Employee_ID AS [WareHouse.Employee_ID], 
            True AS _from0
        FROM MiniBookStoreEntities.WareHouse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.WareHouse_Detail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView16()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.WareHouse_Detail", @"
    SELECT VALUE -- Constructing WareHouse_Detail
        [crud_genarate.model.Store.WareHouse_Detail](T1.[WareHouse_Detail.WareHouseDetail_ID], T1.[WareHouse_Detail.WareHouse_ID], T1.[WareHouse_Detail.Book_ID], T1.[WareHouse_Detail.Book_Count], T1.[WareHouse_Detail.Book_Price])
    FROM (
        SELECT 
            T.WareHouseDetail_ID AS [WareHouse_Detail.WareHouseDetail_ID], 
            T.WareHouse_ID AS [WareHouse_Detail.WareHouse_ID], 
            T.Book_ID AS [WareHouse_Detail.Book_ID], 
            T.Book_Count AS [WareHouse_Detail.Book_Count], 
            T.Book_Price AS [WareHouse_Detail.Book_Price], 
            True AS _from0
        FROM MiniBookStoreEntities.WareHouse_Detail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Bill
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView17()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Bill", @"
    SELECT VALUE -- Constructing Bill
        [crud_genarate.model.Bill](T1.[Bill.Bill_ID], T1.[Bill.Bill_Date], T1.[Bill.Customer_ID], T1.[Bill.Employee_ID], T1.[Bill.Total_Money], T1.[Bill.Excess_Cash], T1.[Bill.Sum_Money], T1.[Bill.Bill_Type], T1.Bill_DiscountCode, T1.[Bill.Bill_Status], T1.[Bill.Customer_Cash])
    FROM (
        SELECT 
            T.Bill_ID AS [Bill.Bill_ID], 
            T.Bill_Date AS [Bill.Bill_Date], 
            T.Customer_ID AS [Bill.Customer_ID], 
            T.Employee_ID AS [Bill.Employee_ID], 
            T.Total_Money AS [Bill.Total_Money], 
            T.Excess_Cash AS [Bill.Excess_Cash], 
            T.Sum_Money AS [Bill.Sum_Money], 
            T.Bill_Type AS [Bill.Bill_Type], 
            T.DiscountCode AS Bill_DiscountCode, 
            T.Bill_Status AS [Bill.Bill_Status], 
            T.Customer_Cash AS [Bill.Customer_Cash], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Bill AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Bill_Detail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView18()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Bill_Detail", @"
    SELECT VALUE -- Constructing Bill_Detail
        [crud_genarate.model.Bill_Detail](T1.[Bill_Detail.Detail_ID], T1.[Bill_Detail.Bill_ID], T1.[Bill_Detail.Book_ID], T1.[Bill_Detail.Book_Count], T1.[Bill_Detail.Book_Price], T1.[Bill_Detail.Book_Promotion], T1.[Bill_Detail.Book_InPrice])
    FROM (
        SELECT 
            T.Detail_ID AS [Bill_Detail.Detail_ID], 
            T.Bill_ID AS [Bill_Detail.Bill_ID], 
            T.Book_ID AS [Bill_Detail.Book_ID], 
            T.Book_Count AS [Bill_Detail.Book_Count], 
            T.Book_Price AS [Bill_Detail.Book_Price], 
            T.Book_Promotion AS [Bill_Detail.Book_Promotion], 
            T.Book_InPrice AS [Bill_Detail.Book_InPrice], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Bill_Detail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Bill_Type
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView19()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Bill_Type", @"
    SELECT VALUE -- Constructing Bill_Type
        [crud_genarate.model.Bill_Type](T1.[Bill_Type.BillType_ID], T1.[Bill_Type.BillType_Name])
    FROM (
        SELECT 
            T.BillType_ID AS [Bill_Type.BillType_ID], 
            T.BillType_Name AS [Bill_Type.BillType_Name], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Bill_Type AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Book
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView20()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Book", @"
    SELECT VALUE -- Constructing Book
        [crud_genarate.model.Book](T1.[Book.Book_ID], T1.[Book.Book_Name], T1.[Book.Book_Author], T1.[Book.Book_SubCategory], T1.[Book.Book_Category], T1.[Book.Book_Company], T1.[Book.Book_Price], T1.[Book.Book_Promotion], T1.[Book.Book_Image], T1.[Book.Book_Inventory], T1.[Book.Book_Status])
    FROM (
        SELECT 
            T.Book_ID AS [Book.Book_ID], 
            T.Book_Name AS [Book.Book_Name], 
            T.Book_Author AS [Book.Book_Author], 
            T.Book_SubCategory AS [Book.Book_SubCategory], 
            T.Book_Category AS [Book.Book_Category], 
            T.Book_Company AS [Book.Book_Company], 
            T.Book_Price AS [Book.Book_Price], 
            T.Book_Promotion AS [Book.Book_Promotion], 
            T.Book_Image AS [Book.Book_Image], 
            T.Book_Inventory AS [Book.Book_Inventory], 
            T.Book_Status AS [Book.Book_Status], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Book AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Book_Inventory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView21()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Book_Inventory", @"
    SELECT VALUE -- Constructing Book_Inventory
        [crud_genarate.model.Book_Inventory](T1.[Book_Inventory.WareHouse_ID], T1.[Book_Inventory.Book_ID], T1.[Book_Inventory.Book_Count])
    FROM (
        SELECT 
            T.WareHouse_ID AS [Book_Inventory.WareHouse_ID], 
            T.Book_ID AS [Book_Inventory.Book_ID], 
            T.Book_Count AS [Book_Inventory.Book_Count], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Book_Inventory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Category
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView22()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Category", @"
    SELECT VALUE -- Constructing Category
        [crud_genarate.model.Category](T1.[Category.Category_ID], T1.[Category.Category_Name])
    FROM (
        SELECT 
            T.Category_ID AS [Category.Category_ID], 
            T.Category_Name AS [Category.Category_Name], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Category AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Company
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView23()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Company", @"
    SELECT VALUE -- Constructing Company
        [crud_genarate.model.Company](T1.[Company.Company_ID], T1.[Company.Company_Name])
    FROM (
        SELECT 
            T.Company_ID AS [Company.Company_ID], 
            T.Company_Name AS [Company.Company_Name], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Company AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Customer
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView24()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Customer", @"
    SELECT VALUE -- Constructing Customer
        [crud_genarate.model.Customer](T1.[Customer.Customer_ID], T1.[Customer.Customer_Name], T1.[Customer.Customer_Phone], T1.[Customer.Customer_Email], T1.[Customer.Customer_Address])
    FROM (
        SELECT 
            T.Customer_ID AS [Customer.Customer_ID], 
            T.Customer_Name AS [Customer.Customer_Name], 
            T.Customer_Phone AS [Customer.Customer_Phone], 
            T.Customer_Email AS [Customer.Customer_Email], 
            T.Customer_Address AS [Customer.Customer_Address], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Customer AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Discount_Code
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView25()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Discount_Code", @"
    SELECT VALUE -- Constructing Discount_Code
        [crud_genarate.model.Discount_Code](T1.[Discount_Code.Code_ID], T1.[Discount_Code.Code_Name], T1.[Discount_Code.Code_Type], T1.[Discount_Code.Date_Start], T1.[Discount_Code.Date_End], T1.[Discount_Code.Code_Status])
    FROM (
        SELECT 
            T.Code_ID AS [Discount_Code.Code_ID], 
            T.Code_Name AS [Discount_Code.Code_Name], 
            T.Code_Type AS [Discount_Code.Code_Type], 
            T.Date_Start AS [Discount_Code.Date_Start], 
            T.Date_End AS [Discount_Code.Date_End], 
            T.Code_Status AS [Discount_Code.Code_Status], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Discount_Code AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Discount_Type
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView26()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Discount_Type", @"
    SELECT VALUE -- Constructing Discount_Type
        [crud_genarate.model.Discount_Type](T1.[Discount_Type.DiscountType_ID], T1.[Discount_Type.DiscountType_Name], T1.[Discount_Type.Book_Count], T1.[Discount_Type.DiscountType_Promotion])
    FROM (
        SELECT 
            T.DiscountType_ID AS [Discount_Type.DiscountType_ID], 
            T.DiscountType_Name AS [Discount_Type.DiscountType_Name], 
            T.Book_Count AS [Discount_Type.Book_Count], 
            T.DiscountType_Promotion AS [Discount_Type.DiscountType_Promotion], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Discount_Type AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Employee
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView27()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Employee", @"
    SELECT VALUE -- Constructing Employee
        [crud_genarate.model.Employee](T1.[Employee.Employee_ID], T1.[Employee.Employee_Name], T1.[Employee.Employee_Address], T1.[Employee.Employee_Gender], T1.[Employee.Employee_DOB], T1.[Employee.Employee_CreatedDate], T1.[Employee.Employee_Avatar], T1.[Employee.Employee_Phone], T1.[Employee.Employee_Status], T1.[Employee.Employee_Role], T1.[Employee.Sum_Date])
    FROM (
        SELECT 
            T.Employee_ID AS [Employee.Employee_ID], 
            T.Employee_Name AS [Employee.Employee_Name], 
            T.Employee_Address AS [Employee.Employee_Address], 
            T.Employee_Gender AS [Employee.Employee_Gender], 
            T.Employee_DOB AS [Employee.Employee_DOB], 
            T.Employee_CreatedDate AS [Employee.Employee_CreatedDate], 
            T.Employee_Avatar AS [Employee.Employee_Avatar], 
            T.Employee_Phone AS [Employee.Employee_Phone], 
            T.Employee_Status AS [Employee.Employee_Status], 
            T.Employee_Role AS [Employee.Employee_Role], 
            T.Sum_Date AS [Employee.Sum_Date], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Employee AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Employee_Account
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView28()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Employee_Account", @"
    SELECT VALUE -- Constructing Employee_Account
        [crud_genarate.model.Employee_Account](T1.[Employee_Account.Employee_ID], T1.[Employee_Account.Account_UserName], T1.[Employee_Account.Account_Passwork], T1.[Employee_Account.Account_LastLogin])
    FROM (
        SELECT 
            T.Employee_ID AS [Employee_Account.Employee_ID], 
            T.Account_UserName AS [Employee_Account.Account_UserName], 
            T.Account_Passwork AS [Employee_Account.Account_Passwork], 
            T.Account_LastLogin AS [Employee_Account.Account_LastLogin], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Employee_Account AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Page_Wage
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView29()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Page_Wage", @"
    SELECT VALUE -- Constructing Page_Wage
        [crud_genarate.model.Page_Wage](T1.[Page_Wage.ID], T1.[Page_Wage.Employee_ID], T1.[Page_Wage.Salary], T1.[Page_Wage.Date], T1.[Page_Wage.SumDate])
    FROM (
        SELECT 
            T.ID AS [Page_Wage.ID], 
            T.Employee_ID AS [Page_Wage.Employee_ID], 
            T.Salary AS [Page_Wage.Salary], 
            T.Date AS [Page_Wage.Date], 
            T.SumDate AS [Page_Wage.SumDate], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Page_Wage AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Role
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView30()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Role", @"
    SELECT VALUE -- Constructing Role
        [crud_genarate.model.Role](T1.[Role.Role_Name], T1.[Role.Role_Salary], T1.[Role.Role_ID])
    FROM (
        SELECT 
            T.Role_Name AS [Role.Role_Name], 
            T.Role_Salary AS [Role.Role_Salary], 
            T.Role_ID AS [Role.Role_ID], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Role AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.SubCategory
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView31()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.SubCategory", @"
    SELECT VALUE -- Constructing SubCategory
        [crud_genarate.model.SubCategory](T1.[SubCategory.SubCategory_ID], T1.[SubCategory.SubCategory_Name], T1.[SubCategory.Category_ID])
    FROM (
        SELECT 
            T.SubCategory_ID AS [SubCategory.SubCategory_ID], 
            T.SubCategory_Name AS [SubCategory.SubCategory_Name], 
            T.Category_ID AS [SubCategory.Category_ID], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.SubCategory AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.WareHouse
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView32()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.WareHouse", @"
    SELECT VALUE -- Constructing WareHouse
        [crud_genarate.model.WareHouse](T1.[WareHouse.WareHouse_ID], T1.[WareHouse.WareHouse_Type], T1.[WareHouse.WareHouse_Total_Money], T1.[WareHouse.WareHouse_Date], T1.[WareHouse.Employee_ID])
    FROM (
        SELECT 
            T.WareHouse_ID AS [WareHouse.WareHouse_ID], 
            T.WareHouse_Type AS [WareHouse.WareHouse_Type], 
            T.WareHouse_Total_Money AS [WareHouse.WareHouse_Total_Money], 
            T.WareHouse_Date AS [WareHouse.WareHouse_Date], 
            T.Employee_ID AS [WareHouse.Employee_ID], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.WareHouse AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.WareHouse_Detail
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView33()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.WareHouse_Detail", @"
    SELECT VALUE -- Constructing WareHouse_Detail
        [crud_genarate.model.WareHouse_Detail](T1.[WareHouse_Detail.WareHouseDetail_ID], T1.[WareHouse_Detail.WareHouse_ID], T1.[WareHouse_Detail.Book_ID], T1.[WareHouse_Detail.Book_Count], T1.[WareHouse_Detail.Book_Price])
    FROM (
        SELECT 
            T.WareHouseDetail_ID AS [WareHouse_Detail.WareHouseDetail_ID], 
            T.WareHouse_ID AS [WareHouse_Detail.WareHouse_ID], 
            T.Book_ID AS [WareHouse_Detail.Book_ID], 
            T.Book_Count AS [WareHouse_Detail.Book_Count], 
            T.Book_Price AS [WareHouse_Detail.Book_Price], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.WareHouse_Detail AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.Regulations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView34()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.Regulations", @"
    SELECT VALUE -- Constructing Regulations
        [crud_genarate.model.Store.Regulations](T1.Regulations_ID, T1.Regulations_Name, T1.Regulations_Status, T1.Regulations_Value, T1.[Regulations.Value_Type])
    FROM (
        SELECT 
            T.ID AS Regulations_ID, 
            T.Name AS Regulations_Name, 
            T.Status AS Regulations_Status, 
            T.[Value] AS Regulations_Value, 
            T.Value_Type AS [Regulations.Value_Type], 
            True AS _from0
        FROM MiniBookStoreEntities.Regulations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.Regulations
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView35()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.Regulations", @"
    SELECT VALUE -- Constructing Regulations
        [crud_genarate.model.Regulations](T1.Regulations_ID, T1.Regulations_Name, T1.Regulations_Status, T1.Regulations_Value, T1.[Regulations.Value_Type])
    FROM (
        SELECT 
            T.ID AS Regulations_ID, 
            T.Name AS Regulations_Name, 
            T.Status AS Regulations_Status, 
            T.[Value] AS Regulations_Value, 
            T.Value_Type AS [Regulations.Value_Type], 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.Regulations AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for crud_genaratemodelStoreContainer.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView36()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("crud_genaratemodelStoreContainer.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [crud_genarate.model.Store.sysdiagrams](T1.sysdiagrams_name, T1.[sysdiagrams.principal_id], T1.[sysdiagrams.diagram_id], T1.sysdiagrams_version, T1.sysdiagrams_definition)
    FROM (
        SELECT 
            T.name AS sysdiagrams_name, 
            T.principal_id AS [sysdiagrams.principal_id], 
            T.diagram_id AS [sysdiagrams.diagram_id], 
            T.version AS sysdiagrams_version, 
            T.definition AS sysdiagrams_definition, 
            True AS _from0
        FROM MiniBookStoreEntities.sysdiagrams AS T
    ) AS T1");
        }
        
        /// <Summary>
        /// return view for MiniBookStoreEntities.sysdiagrams
        /// </Summary>
        private System.Collections.Generic.KeyValuePair<string, string> GetView37()
        {
            return new System.Collections.Generic.KeyValuePair<string, string>("MiniBookStoreEntities.sysdiagrams", @"
    SELECT VALUE -- Constructing sysdiagrams
        [crud_genarate.model.sysdiagrams](T1.sysdiagrams_name, T1.[sysdiagrams.principal_id], T1.[sysdiagrams.diagram_id], T1.sysdiagrams_version, T1.sysdiagrams_definition)
    FROM (
        SELECT 
            T.name AS sysdiagrams_name, 
            T.principal_id AS [sysdiagrams.principal_id], 
            T.diagram_id AS [sysdiagrams.diagram_id], 
            T.version AS sysdiagrams_version, 
            T.definition AS sysdiagrams_definition, 
            True AS _from0
        FROM crud_genaratemodelStoreContainer.sysdiagrams AS T
    ) AS T1");
        }
    }
}
